package com.gojob.persistence.hibernatepojos;
// Generated 14 Jul, 2013 5:55:47 PM by Hibernate Tools 3.2.1.GA


import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.gojob.framework.persistence.AbstractPersistenceBean;

/**
 * ContactTbl generated by hbm2java
 */
@Entity
@Table(name="contact_tbl"
    ,catalog="gojob"
    , uniqueConstraints = @UniqueConstraint(columnNames="contact_alternate_email") 
)
public class ContactTbl  extends AbstractPersistenceBean {


     private Integer contactId;
     private LocationTbl locationTbl;
     private String contactAlternateEmail;
     private String contactCellNumber;
     private Integer contactLandlineNumber;
     private String contactAddress;
     private Integer contactPincode;
     private Set<EmployerProfileTbl> employerProfileTbls = new HashSet<EmployerProfileTbl>(0);
     private Set<PersonalTbl> personalTbls = new HashSet<PersonalTbl>(0);

    public ContactTbl() {
    }

	
    public ContactTbl(LocationTbl locationTbl) {
        this.locationTbl = locationTbl;
    }
    public ContactTbl(LocationTbl locationTbl, String contactAlternateEmail, String contactCellNumber, Integer contactLandlineNumber, String contactAddress, Integer contactPincode, Set<EmployerProfileTbl> employerProfileTbls, Set<PersonalTbl> personalTbls) {
       this.locationTbl = locationTbl;
       this.contactAlternateEmail = contactAlternateEmail;
       this.contactCellNumber = contactCellNumber;
       this.contactLandlineNumber = contactLandlineNumber;
       this.contactAddress = contactAddress;
       this.contactPincode = contactPincode;
       this.employerProfileTbls = employerProfileTbls;
       this.personalTbls = personalTbls;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="contact_id", unique=true, nullable=false)
    public Integer getContactId() {
        return this.contactId;
    }
    
    public void setContactId(Integer contactId) {
        this.contactId = contactId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="loc_id", nullable=false)
    public LocationTbl getLocationTbl() {
        return this.locationTbl;
    }
    
    public void setLocationTbl(LocationTbl locationTbl) {
        this.locationTbl = locationTbl;
    }
    
    @Column(name="contact_alternate_email", unique=true, length=300)
    public String getContactAlternateEmail() {
        return this.contactAlternateEmail;
    }
    
    public void setContactAlternateEmail(String contactAlternateEmail) {
        this.contactAlternateEmail = contactAlternateEmail;
    }
    
    @Column(name="contact_cell_number", length=20)
    public String getContactCellNumber() {
        return this.contactCellNumber;
    }
    
    public void setContactCellNumber(String contactCellNumber) {
        this.contactCellNumber = contactCellNumber;
    }
    
    @Column(name="contact_landline_number")
    public Integer getContactLandlineNumber() {
        return this.contactLandlineNumber;
    }
    
    public void setContactLandlineNumber(Integer contactLandlineNumber) {
        this.contactLandlineNumber = contactLandlineNumber;
    }
    
    @Column(name="contact_address", length=1000)
    public String getContactAddress() {
        return this.contactAddress;
    }
    
    public void setContactAddress(String contactAddress) {
        this.contactAddress = contactAddress;
    }
    
    @Column(name="contact_pincode")
    public Integer getContactPincode() {
        return this.contactPincode;
    }
    
    public void setContactPincode(Integer contactPincode) {
        this.contactPincode = contactPincode;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="contactTbl")
    public Set<EmployerProfileTbl> getEmployerProfileTbls() {
        return this.employerProfileTbls;
    }
    
    public void setEmployerProfileTbls(Set<EmployerProfileTbl> employerProfileTbls) {
        this.employerProfileTbls = employerProfileTbls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="contactTbl")
    public Set<PersonalTbl> getPersonalTbls() {
        return this.personalTbls;
    }
    
    public void setPersonalTbls(Set<PersonalTbl> personalTbls) {
        this.personalTbls = personalTbls;
    }




}


